% Add general Path
addpath(genpath("/cbica/projects/nibs/software/sepia-1.2.2.6/"));
sepia_addpath;

% Define paths
base_path = '/cbica/projects/nibs/';
output_dir = '{{ output_dir }}';
% Concatenated phase image
input(1).name = '{{ phase_file }}';

% Concatenated, skull-stripped magnitude image
input(2).name = '{{ mag_file }}';
input(3).name = '';  % Leave empty if not needed
input(4).name = '{{ header_file }}';

mask_file = '{{ mask_file }}';

% Algorithm parameters (same as before)
algorParam = struct();
algorParam.general = struct( ...
    'isBET', 1, ...
    'fractional_threshold', 0.15, ...  % changed from 0.15
    'gradient_threshold', 0, ...
    'isInvert', 0, ...
    'isRefineBrainMask', 1);
% Define the 'unwrap' sub-structure
algorParam.unwrap = struct( ...
    'echoCombMethod', 'Optimum weights', ...
    'unwrapMethod', 'ROMEO', ...
    'isEddyCorrect', 0, ...
    'isSaveUnwrappedEcho', 1);
% Define the 'bfr' sub-structure
algorParam.bfr = struct( ...
    'refine_method', 'None', ...
    'refine_order', 4, ...
    'erode_radius', 0, ...
    'erode_before_radius', 0, ...
    'method', 'VSHARP', ...
    'radius', [10, 9, 8, 7, 6, 5, 4, 3]);
% Define the 'qsm' sub-structure
algorParam.qsm = struct( ...
    'reference_tissue', 'CSF', ...
    'method', 'MRI Suscep. Calc.', ...
    'solver', 'Direct Tikhonov', ...
    'lambda', 0.05);

if ~exist(output_dir, 'dir')
    mkdir(output_dir); % This creates all required parent directories
end

% Run SEPIA process
sepiaIO(input, output_dir, mask_file, algorParam);
